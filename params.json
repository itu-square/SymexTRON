{
  "name": "SymexTRON",
  "tagline": "Symbolic Execution of TRON",
  "body": "![GPLv3 licensed](https://github.com/models-team/SymexTRON/raw/master/README/GPLv3-badge.png)\r\n\r\nA tool for symbolically executing TRON programs and generate white-box tests.\r\n\r\n### Prerequisites\r\n\r\n* Scala 2.11 (tested with 2.11.8)\r\n* SBT   0.13 (tested with 0.13.12)\r\n* Internet access for SBT to download dependencies\r\n\r\nTo run the native Plingeling solver, you must have the `lib/solvers/‹platform›` folder on your `java.library.path` (where `‹platform›` should be replaced by either `darwin` (for OS X) or `linux`).\r\nThis can be achieved by changing the setting in the repository included `.sbtopts` file.\r\nIn case no native solver is available, it will fallback to the Java SAT4J solver which is compatible with more platforms but is slower.\r\n\r\n### To build:\r\n\r\nFirst go to the source directory by using `cd $HOME/Documents/SymexTRON` and then call `sbt compile`.\r\n\r\n### To run tests:\r\n\r\nCall `sbt test` in the SymexTRON directory.\r\n\r\n### To run the SLE paper evaluation:\r\n\r\nCall `sbt run` in the SymexTRON directory.\r\n\r\nThe main evaluation source file is `src/main/scala/examples/evaluation/Evaluation.scala`, and it uses some of the example files\r\nfrom the containing `examples` folder.\r\n\r\n### To make an example program:\r\n\r\nThe description of the AST for type-definitions and programs is available in the [SYNTAX.md](SYNTAX.md) file.\r\nThe description of the heap representation is available in [SEMANTICS.md](SEMANTICS.md) file.\r\n\r\nTo make an example, start by creating a new file with your example name e.g. `FooExample.scala` which contains an object `FooExample` that inherits from the `examples.Example` trait.\r\nThen override the `classDefs` (containing the metamodel/type-definitions), `pres` (containing the initial memory) and `prog` (containing the TRON program) values to contain your desired program. Remember to add the following imports:\r\n\r\n```\r\nimport semantics.domains._\r\nimport syntax.ast.Statement._\r\nimport syntax.ast._\r\n```\r\n\r\nFor a simple example, see the `IdIterExample` in the `examples` package.\r\n\r\nYou can run an example by using `sbt 'run-main ‹example name›'`, e.g. `sbt 'run-main examples.IdIterExample'` for running the tool on the `IdIterExample`.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}